addEventListener('fetch', event => {
	event.respondWith(handleRequest(event))
})

async function handleRequest(event) {
	const httpMethod = event.request.method;

	// Only accept POST and OPTIONS methods
	if (!(httpMethod === "POST" || httpMethod === "OPTIONS")) {
		return new Response(JSON.stringify({success: false, error: 1}), {status: 400, headers: { "content-type": "application/json", "Access-Control-Allow-Origin": "https://feedengage-demo.pages.dev" }});
	}

	const jsonBody = await event.request.json();

	// Preflight handler
	if (httpMethod === "OPTIONS") {
		return new Response(null, {status: 204, headers: { "content-type": "application/json", "Access-Control-Allow-Origin": "https://feedengage-demo.pages.dev", "Access-Control-Allow-Methods": "POST, OPTIONS" }});
	}

	// Input validation
	if (!(jsonBody.title === 1 || jsonBody.title === 2 || jsonBody.title === 3 || jsonBody.content === 1 || jsonBody.content === 2 || jsonBody.content === 3 || jsonBody.image === 1 || jsonBody.image === 2)) {
		return new Response(JSON.stringify({success: false, error: 2}), {status: 400, headers: { "content-type": "application/json", "Access-Control-Allow-Origin": "https://feedengage-demo.pages.dev" }});
	}

	/*// Captcha verification
	if (jsonBody.captcha === "" || jsonBody.captcha === undefined) {
		return new Response(JSON.stringify({success: false, error: 3}), {status: 400, headers: { "content-type": "application/json" }});
	}
	const captchaResponse = await fetch("https://hcaptcha.com/siteverify", {method: "POST", body: "response=" + jsonBody.captcha + "&secret=" + HCAPTCHA_ACCOUNT_SECRET, headers: {'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'}}).then(res => res.json());
	if (captchaResponse.success !== true) {
		return new Response(JSON.stringify({success: false, error: 4}), {status: 400, headers: { "content-type": "application/json" }});
	}*/

	// Create request body
	let apiRequest = {
		authentication: FE_MANAGE_API_KEY,
		post: {}
	};

	if (jsonBody.title === 1) { // Title 1
		apiRequest.post.postTitle = "Morbi blandit ut dolor sed mollis.";
	}
	if (jsonBody.title === 2) { // Title 2
		apiRequest.post.postTitle = "Aliquam ultrices dictum rhoncus.";
	}
	if (jsonBody.title === 3) { // Title 3
		apiRequest.post.postTitle = "Sed accumsan consectetur nibh a blandit.";
	}

	if (jsonBody.content === 1) { // Content 1
		apiRequest.post.postContent = "Pellentesque congue elit arcu, sed tempus metus tempor id. Duis mollis erat at consequat mattis. Mauris nunc arcu, hendrerit sed suscipit eget, ornare in lorem. Nullam bibendum sit amet eros et sollicitudin. Phasellus ut vehicula sapien. Fusce elementum feugiat lacinia. In malesuada nibh quis eros malesuada, quis pretium felis pharetra.";
	}
	if (jsonBody.content === 2) { // Content 2
		apiRequest.post.postContent = "Vivamus ut libero sollicitudin, luctus nisi mattis, lobortis lacus. Sed efficitur, felis in ullamcorper gravida, ipsum ante vulputate massa, ut ultricies augue mi at dolor. Nullam a vestibulum ligula. Maecenas eu sem odio. Aenean at erat venenatis, ornare quam vitae, fringilla massa. Cras commodo eleifend quam sed efficitur.";
	}
	if (jsonBody.content === 3) { // Content 3
		apiRequest.post.postContent = "Quisque id tellus et justo pretium eleifend pharetra consequat dolor. Etiam fringilla ut dui ac laoreet. Phasellus vitae facilisis augue. Nam viverra blandit arcu vel luctus. In leo arcu, ultrices vel dolor in, lobortis elementum turpis. Nulla vitae imperdiet mi.";
	}

	//data:image/webp;base64,
	if (jsonBody.image === 1) { // Image 1
		apiRequest.post.postImage = "data:image/webp;base64, ";
		apiRequest.post.postImageAltText = "Mountains covered in snow";
	}
	if (jsonBody.image === 2) { // Image 2
		apiRequest.post.postImage = "data:image/webp;base64, ";
		apiRequest.post.postImageAltText = "Sunset at a beach"
	}

	apiRequest.post.postTimestamp = Date.now();

	const feRequestBody = JSON.stringify(apiRequest);

	// Call manage API of FeedEngage worker
	const feResponse = await fetch(FE_API_URL + "/api/manage/", {method: "POST", body: feRequestBody}).then(res => res.json());
	if (feResponse.success !== true) {
		return new Response(JSON.stringify({success: false, error: 5}), {status: 500, headers: { "content-type": "application/json", "Access-Control-Allow-Origin": "https://feedengage-demo.pages.dev" }});
	}

	// Return success
	return new Response(JSON.stringify({success: true}), {headers: { "content-type": "application/json", "Access-Control-Allow-Origin": "https://feedengage-demo.pages.dev" }});
}